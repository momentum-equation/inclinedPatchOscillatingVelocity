/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  1.5                                   |
|   \\  /    A nd           | Web:      http://www.OpenFOAM.org               |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      controlDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

//application moveDynamicMesh;

application     pimpleHeatDyMFoam;

// startFrom       startTime;

startFrom       latestTime;

startTime       0;

stopAt          endTime;

endTime         0.08;

deltaT          0.0004;

writeControl    timeStep;

writeInterval   5;

purgeWrite     0;

writeFormat     binary;

writePrecision  6;

writeCompression uncompressed;

timeFormat      general;

timePrecision   6;

runTimeModifiable yes;

adjustTimeStep  no;

//maxCo           0.2;

//libs ("libAngularOscillatingDisplacement.so");
//libs ("libMyPolynomVelocity.so");
libs ("libMyOscillatingVelocity.so");
//libs ("libgroovyBC.so");
// ************************************************************************* //

functions
{
	probes2
	{
		type probes;
		functionObjectLibs ("libsampling.so");
		//dictionary probesDict;
		probeLocations
			(
				(0 0.0095 0)
				(0 0.0105 0)
				(0 0.0035 0)
			);
		fields	(p U);
		outputControl       timeStep;
		outputInterval      1;
	}

    field_average   
	{
        type            fieldAverage;
        cleanRestart    true;
        functionObjectLibs ( "libfieldFunctionObjects.so" );
        enabled         true;
        outputControl   outputTime;
        outputInterval  1;
        fields
        (
            U
            {
                mean        on;
                prime2Mean  on;
                base        time;
            }

            p
            {
                mean        on;
                prime2Mean  on;
                base        time;
            }

            NusseltNumber
            {
            	mean        on;
            	prime2Mean  on;
            	base        time;
            }

            T
            {
            	mean         on;
            	prime2Mean   on;
            	base         time;
            }
        );
    }

}

// ************************************************************************* //
